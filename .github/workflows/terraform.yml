name: "Terraform"

on:
  workflow_call:
    inputs:
      aws_account_id:
        required: true
        type: string
      environment:
        required: true
        type: string
      plan_only:
        required: false
        type: boolean
        default: true
      terraform_version:
        required: false
        type: string
        default: "1.3.2"

env:
  AWS_REGION: "us-east-1"
  ENV: ${{ inputs.environemnt }}

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: read
  security-events: write

jobs:
  plan:
    name: "Plan"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/terraform
          role-session-name: ${{ github.triggering_actor }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Terraform Format
        id: fmt
        run: make format

      - name: Terraform Init
        id: init
        run: make init

      # - name: Terraform Validate
      #   id: validate
      #   run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: make plan
        continue-on-error: true

      - name: tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.3
        with:
          sarif_file: tfsec.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: tfsec.sarif

      - name: Create the plan summary
        uses: actions/github-script@v6
        if: always()
        id: summary
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

            \`\`\`terraform\n
            ${{ steps.plan.outputs.stdout }}
            \`\`\`

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            // 2. Set the output variable
            const fs = require('fs');
            fs.writeFileSync('./summary.md', output);
            core.setOutput('summary', output);

      - name: Write the step summary
        if: always()
        run: cat ./summary.md >> $GITHUB_STEP_SUMMARY

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

  apply:
    name: "Apply"
    needs: plan
    if: inputs.plan_only == false
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/terraform
          role-session-name: ${{ github.triggering_actor }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: ${{ inputs.terraform_version }}
          terraform_wrapper: false

      - name: Terraform Apply
        run: make apply
